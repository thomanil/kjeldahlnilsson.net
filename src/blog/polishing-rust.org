#+TITLE:     Polishing Rust
#+EMAIL:     thomas@kjeldahlnilsson.net
#+DATE:      24.04.2008
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS: H:3 num:nil toc:nil @:t ::t |:t ^:t -:t f:t *:t <:t 
#+OPTIONS: TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:
#+LINK_HOME:
#+XSLT:

#+BEGIN_HTML
<p>  I'm nowhere near as good a programmer as I should be.</p>

<p>I'm not <strong>terrible</strong> - just a bit off from where I should be.</p>

<p>What actually made this hit home was, initially, some of the job interviews I went through last year. I did get offers from all the companies I interviewed at. Maybe this isn't saying much given how crazy<strong> </strong>the IT job market has been for the last few years... or am I actually <a href="http://www.codinghorror.com/blog/archives/000781.html">ahead of a bunch of really terrible programmers</a>? Now there's a scary thought for you!</p>

<p>Anyway, some of the more hardball interview questions did give me a clear sense of some areas I'm weak, rusty or just plain ignorant in. Later on I got an additional wakeup call from <a href="http://steve.yegge.googlepages.com/five-essential-phone-screen-questions">this blog post</a>. Go on, go read it right now.</p>

<p>Some consider Steve Yegges idea of a phone screen (or job interview) somewhat harsh. However, you should <strong>know </strong>this stuff if you consider yourself a professional developer. The article painfully reminded me of all the stuff I've either A) forgotten or B) simply never bothered to learn.</p>

<p>So, resolution time. I'm going to pick a few areas that I need to improve in initially, and I'll try to invest at least a few hours each week (outside of work). My current todo list:
<ul>
	<li>Learn <a href="http://www.ruby-lang.org/en/">Ruby</a> properly. I never bothered to master a scripting language, though I've dabbled in Ruby and Perl before. And I should take the opportunity to become more proficient with <a href="http://www.amazon.com/Mastering-Regular-Expressions-Jeffrey-Friedl/dp/0596528124/ref=pd_bbs_sr_1?ie=UTF8&amp;s=books&amp;qid=1207950991&amp;sr=1-1">regular expressions</a> while I'm at it.</li>
	<li>Learn a <a href="http://en.wikipedia.org/wiki/Functional_programming">functional</a><strong> </strong>programming language, at least enough to feel more familiar and comfortable with that paradigm. I've worked with people who are fond of <a href="http://paulgraham.com/rootsoflisp.html">Lisp</a>, and it clearly showed in their Java code. In a good way.</li>
	<li><a href="http://www.amazon.com/Basic-Mathematics-Serge-Lang/dp/0387967877/ref=pd_bbs_7?ie=UTF8&amp;s=books&amp;qid=1207950516&amp;sr=8-7">Brush up</a><strong> </strong>on my <a href="http://www.amazon.com/Mathematical-Methods-Physical-Sciences-Mary/dp/0471198269/ref=sr_1_1?ie=UTF8&amp;s=books&amp;qid=1207950584&amp;sr=1-1">math skills</a>. I was never a very inspired math student in school, but I'm continuing to find that I really should've focused more on that.</li>
</ul></p>

<p>Time to polish the rust and sharpen the blade.</p>
#+END_HTML
